################################
# go_dtitk_difIndiv.submit
#  
################################

Requirements  = ( OpSys == "LINUX" && Arch =="X86_64" )    

notification = never
# getenv = True

Executable = go_dtitk_difTVMean.sh
Universe = vanilla
Log = tmp/go_dtitk_difTVMean.log
Error = tmp/go_dtitk_difTVMean.error
Output = tmp/go_dtitk_difTVMean.output

should_transfer_files = yes
when_to_transfer_output = ON_EXIT


transfer_input_files = bin/TVMean,$(outputDiffeo)
# transfer_input_files = dti_diffeomorphic_population_1_it.sh,bin/TVMean,bin/VVMean,bin/dfToInverse,bin/deformationSymTensor3DVolume,TEST_DATA/mean_diffeomorphic_initial6.nii.gz

transfer_output_files = $(template)
# transfer_output_files = TEST_DATA/mean_diffeomorphic_initial6.nii.gz

Arguments = $(template)
# Arguments = TEST_DATA/mean_diffeomorphic_initial6.nii.gz

# Put the job on hold if it is taking longer than 5 hours...
periodic_hold = (JobStatus == 2) && ((CurrentTime - EnteredCurrentStatus) > (60 * 60 * 5))
# # remember where you have run
match_list_length = 5
# # release any job that had an issue and got set to hold after 30 seconds
# ## FROM WRAPPER... periodic_release = (JobStatus == 5) && ((CurrentTime - EnteredCurrentStatus) > 30)
periodic_release = (JobStatus == 5) && ((CurrentTime - EnteredCurrentStatus) > 30) && (NumSystemHolds < 10)
# # neither run where you failed to complete, nor on too busy a server.
requirements = (TARGET.Name =!= LastMatchName1)

request_cpus = 1
request_memory = 2000


Queue
