################################
# Testing...
#  
################################

Requirements  = ( OpSys == "LINUX" && Arch =="X86_64" )    

notification = never
# getenv = True

Executable = go_dtitk_rigidIndiv.sh
Universe = vanilla
Log = tmp/go_dtitk_rigidIndiv${outputFile}.log
Error = tmp/go_dtitk_rigidIndiv${outputFile}.error
Output = tmp/go_dtitk_rigidIndiv${outputfile}.output

should_transfer_files = yes
when_to_transfer_output = ON_EXIT


transfer_input_files = bin/rtvCGM,bin/atvCGM,bin/affineSymTensor3DVolume,$(templateFile),$(inputFile)
# transfer_input_files = bin/rtvCGM,bin/atvCGM,bin/affineSymTensor3DVolume,mean_diffeomorphic_initial6.nii.gz,r09021_461_s05_dti_eddy_fm_sdt_LPI.nii.gz

transfer_output_files = $(outputAffine),$(outputFile)
# transfer_output_files = r09021_461_s05_dti_eddy_fm_sdt_LPIAffine.txt,r09021_461_s05_dti_eddy_fm_sdt_LPI_aff.nii.gz

Arguments = $(templateFile) $(inputFile) $(outputFile)
# Arguments = mean_diffeomorphic_initial6.nii.gz r09021_461_s05_dti_eddy_fm_sdt_LPI.nii.gz test.nii.gz

# Put the job on hold if it is taking longer than 5 hours...
periodic_hold = (JobStatus == 2) && ((CurrentTime - EnteredCurrentStatus) > (60 * 60 * 5))
# # remember where you have run
match_list_length = 5
# # release any job that had an issue and got set to hold after 30 seconds
# ## FROM WRAPPER... periodic_release = (JobStatus == 5) && ((CurrentTime - EnteredCurrentStatus) > 30)
periodic_release = (JobStatus == 5) && ((CurrentTime - EnteredCurrentStatus) > 30) && (NumSystemHolds < 10)
# # neither run where you failed to complete, nor on too busy a server.
requirements = (TARGET.Name =!= LastMatchName1)

request_cpus = 1
request_memory = 1000
request_disk = 1000000


Queue


